{"ast":null,"code":"var _jsxFileName = \"/home/mattias/Documents/enku/recipe-front/recipe-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbars/Navbar.js\";\nimport Login from \"./pages/Login\"; // config\n\nimport ROUTES from \"./config/routes.js\";\nimport Registration from \"./pages/Registration.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction removeToken() {\n  sessionStorage.removeItem(\"token\");\n} // removeToken();\n\n\nfunction setToken(userToken) {\n  sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n}\n\nfunction getToken() {\n  const tokenString = sessionStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  return userToken;\n}\n\nfunction App(props) {\n  _s();\n\n  // const [token, setToken] = useState();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  let routes = null;\n  const token = getToken();\n\n  if (!token) {\n    //   return <Login setToken={setToken} />;\n    // }\n    console.log(\"token\", token);\n    routes = /*#__PURE__*/_jsxDEV(Route, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Login, {\n          setToken: token => setToken(token),\n          onLogin: () => {\n            setIsAuthenticated(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  } else if (token) {\n    routes = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: ROUTES.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        exact: true,\n        component: route.component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper bg-light pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mattias/Documents/enku/recipe-front/recipe-app/src/App.js"],"names":["React","useState","useEffect","Switch","Route","Navbar","Login","ROUTES","Registration","removeToken","sessionStorage","removeItem","setToken","userToken","setItem","JSON","stringify","getToken","tokenString","getItem","parse","App","props","isAuthenticated","setIsAuthenticated","routes","token","console","log","map","route","path","component"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;;AAEA,SAASC,WAAT,GAAuB;AACrBC,EAAAA,cAAc,CAACC,UAAf,CAA0B,OAA1B;AACD,C,CACD;;;AACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3BH,EAAAA,cAAc,CAACI,OAAf,CAAuB,OAAvB,EAAgCC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAhC;AACD;;AAED,SAASI,QAAT,GAAoB;AAClB,QAAMC,WAAW,GAAGR,cAAc,CAACS,OAAf,CAAuB,OAAvB,CAApB;AACA,QAAMN,SAAS,GAAGE,IAAI,CAACK,KAAL,CAAWF,WAAX,CAAlB;AACA,SAAOL,SAAP;AACD;;AAED,SAASQ,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC,KAAD,CAAtD;AAEA,MAAIwB,MAAM,GAAG,IAAb;AACA,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;;AACA,MAAI,CAACS,KAAL,EAAY;AACV;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAD,IAAAA,MAAM,gBACJ,QAAC,KAAD;AAAA,6BAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,QAAQ,EAAGC,KAAD,IAAWd,QAAQ,CAACc,KAAD,CAD/B;AAEE,UAAA,OAAO,EAAE,MAAM;AACbF,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAlBD,MAkBO,IAAIE,KAAJ,EAAW;AAChBD,IAAAA,MAAM,gBACJ;AAAA,gBACGlB,MAAM,CAACsB,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAyB,QAAA,KAAK,MAA9B;AAA+B,QAAA,SAAS,EAAED,KAAK,CAACE;AAAhD;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAOD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE,QAAC,MAAD,OAAYV;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,MAAD;AAAA,kBAASG;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA1CQJ,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbars/Navbar.js\";\nimport Login from \"./pages/Login\";\n// config\nimport ROUTES from \"./config/routes.js\";\nimport Registration from \"./pages/Registration.jsx\";\n\nfunction removeToken() {\n  sessionStorage.removeItem(\"token\");\n}\n// removeToken();\nfunction setToken(userToken) {\n  sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n}\n\nfunction getToken() {\n  const tokenString = sessionStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  return userToken;\n}\n\nfunction App(props) {\n  // const [token, setToken] = useState();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  let routes = null;\n  const token = getToken();\n  if (!token) {\n    //   return <Login setToken={setToken} />;\n    // }\n    console.log(\"token\", token);\n    routes = (\n      <Route>\n        {/* <Login setToken={() => setIsAuthenticated(true)} /> */}\n        <Switch>\n          <Login\n            setToken={(token) => setToken(token)}\n            onLogin={() => {\n              setIsAuthenticated(true);\n            }}\n          />\n          <Registration />\n        </Switch>\n      </Route>\n    );\n  } else if (token) {\n    routes = (\n      <>\n        {ROUTES.map((route) => (\n          <Route path={route.path} exact component={route.component} />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"wrapper bg-light pt-5\">\n      <Navbar {...props} />\n      <div className=\"content\">\n        <Switch>{routes}</Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}