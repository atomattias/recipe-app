[{"/home/mattias/Documents/enku/recipe-front/recipe-app/src/index.js":"1","/home/mattias/Documents/enku/recipe-front/recipe-app/src/App.js":"2","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Registration.jsx":"3","/home/mattias/Documents/enku/recipe-front/recipe-app/src/config/routes.js":"4","/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/Navbars/Navbar.js":"5","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Login.jsx":"6","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Home.jsx":"7","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/AddRecipe.jsx":"8","/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/Footer/Footer.js":"9","/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/Sidebar/Sidebar.js":"10","/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/RecipeCard/RecipeCard.js":"11"},{"size":398,"mtime":1632946794708,"results":"12","hashOfConfig":"13"},{"size":1635,"mtime":1632946794700,"results":"14","hashOfConfig":"13"},{"size":2893,"mtime":1632946794708,"results":"15","hashOfConfig":"13"},{"size":348,"mtime":1632946794708,"results":"16","hashOfConfig":"13"},{"size":4144,"mtime":1632946794708,"results":"17","hashOfConfig":"13"},{"size":2273,"mtime":1632946794708,"results":"18","hashOfConfig":"13"},{"size":3945,"mtime":1632946794708,"results":"19","hashOfConfig":"13"},{"size":3015,"mtime":1632946794708,"results":"20","hashOfConfig":"13"},{"size":1961,"mtime":1632946794708,"results":"21","hashOfConfig":"13"},{"size":2719,"mtime":1632946794708,"results":"22","hashOfConfig":"13"},{"size":1226,"mtime":1632946794708,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2bw0f3",{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/home/mattias/Documents/enku/recipe-front/recipe-app/src/index.js",[],"/home/mattias/Documents/enku/recipe-front/recipe-app/src/App.js",["53","54","55"],"import React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbars/Navbar.js\";\nimport Login from \"./pages/Login\";\n// config\nimport ROUTES from \"./config/routes.js\";\nimport Registration from \"./pages/Registration.jsx\";\n\nfunction removeToken() {\n  sessionStorage.removeItem(\"token\");\n}\n// removeToken();\nfunction setToken(userToken) {\n  sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n}\n\nfunction getToken() {\n  const tokenString = sessionStorage.getItem(\"token\");\n  const userToken = JSON.parse(tokenString);\n  return userToken;\n}\n\nfunction App(props) {\n  // const [token, setToken] = useState();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  let routes = null;\n  const token = getToken();\n  if (!token) {\n    //   return <Login setToken={setToken} />;\n    // }\n    console.log(\"token\", token);\n    routes = (\n      <Route>\n        {/* <Login setToken={() => setIsAuthenticated(true)} /> */}\n        <Switch>\n          <Login\n            setToken={(token) => setToken(token)}\n            onLogin={() => {\n              setIsAuthenticated(true);\n            }}\n          />\n          <Registration />\n        </Switch>\n      </Route>\n    );\n  } else if (token) {\n    routes = (\n      <>\n        {ROUTES.map((route) => (\n          <Route path={route.path} exact component={route.component} />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"wrapper bg-light pt-5\">\n      <Navbar {...props} />\n      <div className=\"content\">\n        <Switch>{routes}</Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Registration.jsx",["56"],"import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nasync function userRegistration(credentials) {\n  return fetch('http://localhost:4001/user/create', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n    .then(data => data.json())\n }\n\nfunction Registration(props) {\n  const [fname, setFname] = useState(0);\n  const [lname, setLname] = useState(0);\n  const [email, setEmail] = useState(0);\n  const [password, setPassword] = useState(0);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await userRegistration({\n      first_name: fname,\n      last_name: lname,\n      email,\n      password,\n    });\n    console.log(data.token)\n    props.history.push('/register')\n  }\n\n  return (\n    <Row>\n      <Col md=\"4\" className=\"offset-md-4\">\n        <Card className=\"card-user\">\n          <CardHeader>\n            <CardTitle tag=\"h5\" className=\"text-center\">\n              Sign up\n            </CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>First Name</label>\n                    <Input placeholder=\"First name\" type=\"text\" onChange={e => setFname(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Last Name</label>\n                    <Input placeholder=\"Last Name\" type=\"text\" onChange={e => setLname(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Email</label>\n                    <Input placeholder=\"email\" type=\"email\" onChange={e => setEmail(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Password</label>\n                    <Input placeholder=\"password\" type=\"password\" onChange={e => setPassword(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <div className=\"ml-auto mr-auto d-flex justify-content-center\">\n                  <Button\n                    className=\"btn-round\"\n                    color=\"primary\"\n                    type=\"submit\"\n                  >\n                    Register\n                  </Button>\n                </div>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\n\nexport default Registration;\n","/home/mattias/Documents/enku/recipe-front/recipe-app/src/config/routes.js",[],"/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/Navbars/Navbar.js",["57"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n} from \"reactstrap\";\n\nfunction Header(props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  const location = useLocation();\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"dark\");\n    }\n    setIsOpen(!isOpen);\n  };\n  const dropdownToggle = (e) => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  const getBrand = () => {\n    let brandName = \"Recipe App\";\n    return brandName;\n  };\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"dark\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor.bind(this));\n  });\n  React.useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <Navbar color={\"dark\"} expand=\"lg\" className={\"navbar-absolute fixed-top\"}>\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-toggle\">\n            <button\n              type=\"button\"\n              ref={sidebarToggle}\n              className=\"navbar-toggler\"\n              onClick={() => openSidebar()}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <NavbarBrand href=\"/\">{getBrand()}</NavbarBrand>\n        </div>\n        <NavbarToggler onClick={toggle}>\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n        </NavbarToggler>\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\n          <form>\n            <InputGroup className=\"no-border\">\n              <Input placeholder=\"Search...\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <i className=\"nc-icon nc-zoom-split\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </form>\n          <Nav navbar>\n            <NavItem>\n              <Link to=\"/add_recipe\" className=\"nav-link btn-plus\">\n                <p className=\"h1\">+</p>\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Stats</span>\n                </p>\n              </Link>\n            </NavItem>\n            <Dropdown\n              nav\n              isOpen={dropdownOpen}\n              toggle={(e) => dropdownToggle(e)}\n            >\n              <DropdownToggle caret nav>\n                <i className=\"nc-icon nc-settings-gear-65\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                </p>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem tag=\"a\">\n                  <Link to=\"/register\">Logout</Link>\n                </DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Login.jsx",["58"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:4001/user/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n    .then(data => data.json())\n }\n\nfunction Login({ onLogin, setToken }) {\n  const [email, setEmail] = useState(0);\n  const [password, setPassword] = useState(0);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await loginUser({\n      email,\n      password\n    });\n    console.log(data.token)\n    setToken(data.token);\n  }\n\n  return (\n    <Row>\n      <Col md=\"4\" className=\"offset-md-4\">\n        <Card className=\"card-user\">\n          <CardHeader>\n            <CardTitle tag=\"h5\" className=\"text-center\">\n              Sign In\n            </CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Email</label>\n                    <Input placeholder=\"email\" type=\"email\" onChange={e => setEmail(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Password</label>\n                    <Input placeholder=\"password\" type=\"password\" onChange={e => setPassword(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <div className=\"ml-auto mr-auto d-flex justify-content-center\">\n                  <Button\n                    className=\"btn-round\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={onLogin}\n                  >\n                    Sign In\n                  </Button>\n                </div>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n\nexport default Login;\n","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Home.jsx",["59","60","61","62","63","64"],"/*!\n\n=========================================================\n* Paper Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { Card, CardImgOverlay, CardTitle, CardText, CardImg, CardGroup } from 'reactstrap';\n\nimport Footer from \"../components/Footer/Footer.js\";\nimport Sidebar from \"../components/Sidebar/Sidebar.js\";\nimport RecipeCard from \"../components/RecipeCard/RecipeCard.js\";\n\nimport ROUTES from \"../config/routes.js\";\n\nvar ps;\n\nfunction Home(props) {\n  const [backgroundColor, setBackgroundColor] = React.useState(\"black\");\n  const [activeColor, setActiveColor] = React.useState(\"info\");\n  const [recipes, setRecipes] = React.useState([]);\n\n  const mainPanel = React.useRef();\n  const location = useLocation();\n  React.useEffect(() => {\n    async function getAllRecipes() {\n      \n      let response = await fetch('http://localhost:4001/recipe')\n      response = await response.json()\n          console.log(response)\n          setRecipes(response)\n     }\n     getAllRecipes()\n     if (navigator.platform.indexOf(\"Win\") > -1) {\n       ps = new PerfectScrollbar(mainPanel.current);\n       document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n      return function cleanup() {\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          ps.destroy();\n          document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }\n      };\n      \n      \n  },[]);\n  // React.useEffect(() => {\n  //   mainPanel.current.scrollTop = 0;\n  //   document.scrollingElement.scrollTop = 0;\n  // }, [location]);\n  const handleActiveClick = (color) => {\n    setActiveColor(color);\n  };\n  const handleBgClick = (color) => {\n    setBackgroundColor(color);\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"main-panel\" >\n        <Card className=\"bg-dark text-white\">\n            <CardImg \n            src=\"https://previews.123rf.com/images/krisckam/krisckam1705/krisckam170500022/78596281-international-mix-set-foods-top-view-on-table.jpg\" \n            alt=\"...\"\n            style={{height: '470px', width: '100%', display: 'block'}}\n            />\n            <CardImgOverlay\n            style={{\n              position: 'absolute',\n              // top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0,\n              padding: '1.25rem',\n              borderRadius: '5.25rem',\n            }}>\n                <CardTitle className=\"h1 text-center\">Recipe App</CardTitle>\n                <CardText className=\"h6 text-center\">Let’s rediscover some of our all-time favorite foods for a cozy fall!</CardText>\n            </CardImgOverlay>\n        </Card>\n        <Switch>\n          {ROUTES.map((prop, key) => {\n            return (\n              <Route\n                path={prop.layout + prop.path}\n                component={prop.component}\n                key={key}\n              />\n            );\n          })}\n        </Switch>\n        <CardGroup style={{alignContent:\"center\", padding:'0px'}}>\n        {recipes.map((e) => (\n          <RecipeCard\n          key={e._id} \n          title={e.name}\n          description={e.description}\n          category={e.category}\n          />\n          )\n        )}\n        </CardGroup>\n        <Footer fluid />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/AddRecipe.jsx",["65","66","67"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nasync function addRecipe(data, header) {\n  return fetch('http://localhost:4001/recipe/create', {\n    method: 'POST',\n    headers: header,\n    body: JSON.stringify(data)\n  })\n    .then(data => console.log(data.json()))\n }\n\nfunction AddRecipe(props) {\n  const [name, setName] = useState(0);\n  const [description, setDescription] = useState(0);\n  const [category, setCategory] = useState(0);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const tokenString = sessionStorage.getItem(\"token\");\n    const userToken = JSON.parse(tokenString);\n    const header = {'x-access-token':userToken, 'Content-Type': 'application/json'}\n    const data = await addRecipe({\n      name,\n      description,\n    }, header);\n    console.log(data)\n    // setToken(data.token);\n  }\n\n  return (\n    <Row>\n      <Col md=\"4\" className=\"offset-md-4\">\n        <Card className=\"card-user\">\n          <CardHeader>\n            <CardTitle tag=\"h5\" className=\"text-center\">\n              Add Recipe\n            </CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Recipe Name</label>\n                    <Input placeholder=\"Enter recipe name\" type=\"text\" onChange={e => setName(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                  <label for=\"category\">Select Category</label>\n                    <Input type=\"select\" name=\"category\" id=\"category\" onChange={e => setCategory(e.target.value)}>\n                      <option value='breakfast'>Breakfast</option>\n                      <option value='lunch'>Lunch</option>\n                      <option value='dinner'>Dinner</option>\n                    </Input>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label for=\"description\">Description</label>\n                    <Input type=\"textarea\" placeholder='Enter description' name=\"desciption\" id=\"description\" onChange={e => setDescription(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <div className=\"ml-auto mr-auto d-flex justify-content-center\">\n                  <Button\n                    className=\"btn-round\"\n                    color=\"primary\"\n                    type=\"submit\"\n                  >\n                    Add Recipe\n                  </Button>\n                </div>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\n\nexport default AddRecipe;\n","/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/Footer/Footer.js",[],"/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/Sidebar/Sidebar.js",[],"/home/mattias/Documents/enku/recipe-front/recipe-app/src/components/RecipeCard/RecipeCard.js",["68","69","70"],"import {\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  CardText,\n  CardLink,\n  CardImg,\n} from \"reactstrap\";\n\nfunction RecipeCard(props) {\n  return (\n    <div>\n      <Card style={{ padding: 30, width: \"30rem\" }} className=\"text-center\">\n        <CardImg\n          top\n          src=\"https://www.sidechef.com/article/3baf5e87-fa83-4730-a087-ab08fe2554e1.jpg?d=1200x560\"\n          alt=\"...\"\n          style={{\n            alignSelf: \"center\",\n            width: \"100%\",\n            borderRadius: \"0.35rem\",\n          }}\n        />\n        <CardBody>\n          <div className=\"info\">\n            <h4 className=\"info-title\">{props.title}</h4>\n            <p>\n              <small\n                className=\"text-muted\"\n                style={{ textTransform: \"uppercase\" }}\n              >\n                {props.category}\n              </small>\n            </p>\n            <p>{props.description}</p>\n          </div>\n\n          <CardLink href=\"/#/\" style={{ textDecoration: \"none\" }}>\n            Read more\n          </CardLink>\n          <CardLink href=\"/#/\" style={{ textDecoration: \"none\" }}>\n            {props.user}\n          </CardLink>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default RecipeCard;\n",{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":21},{"ruleId":"71","severity":1,"message":"76","line":25,"column":10,"nodeType":"73","messageId":"74","endLine":25,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"77","line":24,"column":10,"nodeType":"73","messageId":"74","endLine":24,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"78","line":26,"column":8,"nodeType":"73","messageId":"74","endLine":26,"endColumn":15},{"ruleId":"71","severity":1,"message":"79","line":34,"column":10,"nodeType":"73","messageId":"74","endLine":34,"endColumn":25},{"ruleId":"71","severity":1,"message":"80","line":35,"column":10,"nodeType":"73","messageId":"74","endLine":35,"endColumn":21},{"ruleId":"71","severity":1,"message":"81","line":39,"column":9,"nodeType":"73","messageId":"74","endLine":39,"endColumn":17},{"ruleId":"71","severity":1,"message":"82","line":66,"column":9,"nodeType":"73","messageId":"74","endLine":66,"endColumn":26},{"ruleId":"71","severity":1,"message":"83","line":69,"column":9,"nodeType":"73","messageId":"74","endLine":69,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"84","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":17},{"ruleId":"71","severity":1,"message":"85","line":28,"column":10,"nodeType":"73","messageId":"74","endLine":28,"endColumn":18},{"ruleId":"71","severity":1,"message":"86","line":4,"column":3,"nodeType":"73","messageId":"74","endLine":4,"endColumn":12},{"ruleId":"71","severity":1,"message":"87","line":5,"column":3,"nodeType":"73","messageId":"74","endLine":5,"endColumn":15},{"ruleId":"71","severity":1,"message":"88","line":6,"column":3,"nodeType":"73","messageId":"74","endLine":6,"endColumn":11},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'removeToken' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'color' is assigned a value but never used.","'Sidebar' is defined but never used.","'backgroundColor' is assigned a value but never used.","'activeColor' is assigned a value but never used.","'location' is assigned a value but never used.","'handleActiveClick' is assigned a value but never used.","'handleBgClick' is assigned a value but never used.","'PropTypes' is defined but never used.","'category' is assigned a value but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'CardText' is defined but never used."]