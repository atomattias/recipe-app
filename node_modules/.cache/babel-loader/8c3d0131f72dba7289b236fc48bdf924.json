{"ast":null,"code":"var _jsxFileName = \"/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardHeader, CardBody, CardTitle, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:4001/user/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nfunction Login({\n  onLogin,\n  setToken\n}) {\n  _s();\n\n  const [email, setEmail] = useState(0);\n  const [password, setPassword] = useState(0);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await loginUser({\n      email,\n      password\n    });\n    console.log(data.token);\n    setToken(data.token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      md: \"4\",\n      className: \"offset-md-4\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card-user\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            className: \"text-center\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"email\",\n                    type: \"email\",\n                    onChange: e => setEmail(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    placeholder: \"password\",\n                    type: \"password\",\n                    onChange: e => setPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-auto mr-auto d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-round\",\n                  color: \"primary\",\n                  type: \"submit\",\n                  onClick: onLogin,\n                  children: \"Sign In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"cXN/DrKeJeEqTPPhJJXamL9Da70=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mattias/Documents/enku/recipe-front/recipe-app/src/pages/Login.jsx"],"names":["React","useState","useEffect","PropTypes","Button","Card","CardHeader","CardBody","CardTitle","FormGroup","Form","Input","Row","Col","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","onLogin","setToken","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","token","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:4001/user/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n    .then(data => data.json())\n }\n\nfunction Login({ onLogin, setToken }) {\n  const [email, setEmail] = useState(0);\n  const [password, setPassword] = useState(0);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await loginUser({\n      email,\n      password\n    });\n    console.log(data.token)\n    setToken(data.token);\n  }\n\n  return (\n    <Row>\n      <Col md=\"4\" className=\"offset-md-4\">\n        <Card className=\"card-user\">\n          <CardHeader>\n            <CardTitle tag=\"h5\" className=\"text-center\">\n              Sign In\n            </CardTitle>\n          </CardHeader>\n          <CardBody>\n            <Form onSubmit={handleSubmit}>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Email</label>\n                    <Input placeholder=\"email\" type=\"email\" onChange={e => setEmail(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <label>Password</label>\n                    <Input placeholder=\"password\" type=\"password\" onChange={e => setPassword(e.target.value)}/>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <div className=\"ml-auto mr-auto d-flex justify-content-center\">\n                  <Button\n                    className=\"btn-round\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={onLogin}\n                  >\n                    Sign In\n                  </Button>\n                </div>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}